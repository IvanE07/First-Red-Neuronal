# -*- coding: utf-8 -*-
"""primera_Red_Neuronal.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1blzEkq78xsiai9v7f10DGz9tsEitycL_
"""

import tensorflow as tf
import numpy as np

#Arreglo de 7 entras de peso mexicano
pesoMX = np.array([435, 387, 793, 9, 124, 567, 542], dtype = float)
#arreglo de resultados en dolares
dolar = np.array([21.32, 18.97, 38.87, 0.44, 6.08, 27.79, 26.57], dtype = float)

#red neuronal simple que nos permite dar 1 entrada y 1 salida.
capa = tf.keras.layers.Dense(units = 1, input_shape = [1])
#model de red neuronal (sequential)
modelo = tf.keras.Sequential([capa])

#Entrenamiento:
modelo.compile(
    optimizer=tf.keras.optimizers.Adam(0.3),
    loss='mean_squared_error'
)

print("\nComenzando entrenamiento!")
historial = modelo.fit(pesoMX, dolar, epochs = 500, verbose = False)
print("\nModelo entrenado!")

import matplotlib.pyplot as plt
plt.xlabel("#Epoca")
plt.ylabel("Pérdida")
plt.plot(historial.history["loss"])

print("Predicción!")
resul = modelo.predict([245.23])
print(f"El resultado es: {resul} dolares!")